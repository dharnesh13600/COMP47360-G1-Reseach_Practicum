spring:
  application:
    name: creative-space-finder
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
    hikari:
      # ULTRA CONSERVATIVE for Supabase connections as it is free
      maximum-pool-size: 1           # Only 1 connection total
      minimum-idle: 0                # No idle connections ever
      connection-timeout: 10000      # 10 seconds
      idle-timeout: 10000            # Close idle connections after 10 seconds
      max-lifetime: 120000           # Force close connections after 2 minutes
      leak-detection-threshold: 15000 # 15 seconds leak detection
      # Connection validation
      connection-test-query: SELECT 1
      validation-timeout: 3000       # 3 seconds validation
      auto-commit: true              # Explicit auto-commit
      pool-name: "ProductionHikariPool"     # Production pool name
      # CRITICAL: Aggressive connection cleanup
      keepalive-time: 0              # No keepalive pings
      initialization-fail-timeout: 1 # Fail fast on startup issues

  jpa:
    hibernate:
      ddl-auto: validate             # Changed from 'none' to 'validate' for safety
    show-sql: false                  # Disable SQL logging to reduce noise
    open-in-view: false              # CRITICAL: Prevents connection leaks
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect  # Explicit dialect to avoid JDBC metadata lookup
        jdbc:
          time_zone: UTC
          batch_size: 20             # Batch operations for efficiency
        connection:
          provider_disables_autocommit: false  # Ensure autocommit works
        # CRITICAL: Reduce connection usage during startup
        temp:
          use_jdbc_metadata_defaults: false
        boot:
          allow_jdbc_metadata_access: false

  # CRITICAL: Graceful shutdown handling
  lifecycle:
    timeout-per-shutdown-phase: 30s

  # Session configuration for admin authentication
  session:
    store-type: memory
    timeout: 24h

  # ASYNC TASK EXECUTION (Required for cache warming)
  task:
    execution:
      pool:
        core-size: 2
        max-size: 5
        queue-capacity: 10
        thread-name-prefix: "async-"
        keep-alive: 60s

# Admin credentials configuration - SECURE WITH ENVIRONMENT VARIABLES
admin:
  username: ${ADMIN_USERNAME}
  password:
    hash: ${ADMIN_PASSWORD_HASH}

openweather:
  api-key: ${OPENWEATHER_API_KEY}

server:
  port: 8080
  servlet:
    context-path: /
    session:
      tracking-modes: cookie
      cookie:
        secure: false  # Set to true in production with HTTPS
        http-only: true
        max-age: 86400  # 24 hours
  # CRITICAL: Proper shutdown handling
  shutdown: graceful
  tomcat:
    # UPDATED: Separate timeouts for different scenarios
    connection-timeout: 30000        # 30 seconds for regular requests
    max-connections: 50
    threads:
      max: 200
      min-spare: 10
    # IMPORTANT: These settings allow for longer admin operations
    processor-cache: 200
    accept-count: 100

# ENHANCED LOGGING FOR DEBUGGING
logging:
  level:
    com.creativespacefinder.manhattan: INFO
    org.springframework.web: INFO           # Reduced from DEBUG
    org.hibernate.SQL: WARN                 # Reduced from DEBUG
    org.hibernate.orm.deprecation: WARN     # Suppress deprecation warnings
    com.zaxxer.hikari: INFO                 # Reduced from DEBUG
    com.zaxxer.hikari.pool: WARN            # Only show warnings for pool issues
    # ADDED: Cache and async debugging
    org.springframework.cache: DEBUG        # Show cache operations
    com.github.benmanes.caffeine: DEBUG     # Show Caffeine cache stats
    org.springframework.scheduling: INFO    # Show async task execution
    org.springframework.core.task: INFO     # Show task executor activity

# Management endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,shutdown,caches
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true
    caches:
      enabled: true  # Enable cache endpoint for debugging

# ML SERVICE CONFIGURATION
ml:
  predict:
    url: ${ML_PREDICT_URL:http://ml-service.default.svc.cluster.local:8000/predict_batch}
    # ADDED: Timeout settings for ML service calls
    timeout:
      connect: 30000    # 30 seconds to connect
      read: 120000      # 2 minutes to read response

# CACHE WARMING CONFIGURATION
cache:
  warming:
    # Enable async processing to prevent 502 errors
    async: true
    # Batch processing to reduce load
    batch-size: 5
    delay-between-batches: 3000  # 3 seconds between batches
    max-duration-minutes: 20     # Maximum 20 minutes for safety
