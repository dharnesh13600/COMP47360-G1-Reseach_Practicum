pipeline{
    agent any

    environment {

        CLUSTER_NAME = "cluster-1"
        LOCATION = "europe-west2-a"
        // artifact registry components
        GCP_PROJECT = "abstract-tract-383807"
        AR_REGION = "europe-west2"
        AR_REPO = "frontend-images"

        IMAGE_TAG = "${BRANCH_NAME}-${BUILD_ID}"
        IMAGE_URI = "${AR_REGION}-docker.pkg.dev/${GCP_PROJECT}/${AR_REPO}/frontend:${IMAGE_TAG}"

    }

    // node.js plugin
    tools {
      nodejs 'node22'
    }

    stages {
      stage('Checkout') {
        steps {
          checkout scm
        }
      }
      stage('Build'){
        steps{
          dir('frontend'){
            sh '''
              export NPM_CONFIG_CACHE=$PWD/.npm-cache
              mkdir -p "$NPM_CONFIG_CACHE"
              
              npm ci
              npm run lint
              #npm --if-present test
              npm run build
            '''
          }
        }
      }
      stage('Docker Build & Push'){
        steps{
          withCredentials([file(credentialsId: 'gcp-sa-key', variable: 'GCLOUD_KEY')]){
            sh '''
              gcloud auth activate-service-account --key-file="$GCLOUD_KEY"
              gcloud config set project "$GCP_PROJECT"

              gcloud auth configure-docker ${AR_REGION}-docker.pkg.dev -q

              docker build -t "$IMAGE_URI" -f frontend/Dockerfile ./frontend

              docker push "$IMAGE_URI"
            '''
          }
        }
      }
      stage('Deploy to GKE') {
        steps {
    
          withCredentials([file(credentialsId: 'gcp-sa-key', variable: 'GCP_KEYFILE')]) {

            sh '''

              chmod +x frontend/kube-deploy.sh
              cd frontend
              ./kube-deploy.sh
            
            '''
          }
        }
      }
    }
  post {
    success { echo "✅  Image pushed: ${IMAGE_URI}" }
    failure { echo "❌  Pipeline failed" }
  }
}
